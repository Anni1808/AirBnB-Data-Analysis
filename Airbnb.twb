<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Airbnb_Open_Data' inline='true' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Airbnb_Open_Data' name='textscan.1gmvpsp15k69oz16j36zy0zbzry7'>
            <connection class='textscan' directory='C:/Users/mehta/Downloads/Airbnb_Open_Data.csv' filename='Airbnb_Open_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1gmvpsp15k69oz16j36zy0zbzry7' name='Airbnb_Open_Data.csv' table='[Airbnb_Open_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='NAME' ordinal='1' />
            <column datatype='integer' name='host id' ordinal='2' />
            <column datatype='string' name='host_identity_verified' ordinal='3' />
            <column datatype='string' name='host name' ordinal='4' />
            <column datatype='string' name='neighbourhood group' ordinal='5' />
            <column datatype='string' name='neighbourhood' ordinal='6' />
            <column datatype='real' name='lat' ordinal='7' />
            <column datatype='string' name='country' ordinal='8' />
            <column datatype='string' name='country code' ordinal='9' />
            <column datatype='boolean' name='instant_bookable' ordinal='10' />
            <column datatype='string' name='cancellation_policy' ordinal='11' />
            <column datatype='string' name='room type' ordinal='12' />
            <column datatype='integer' name='Construction year' ordinal='13' />
            <column datatype='real' name='price' ordinal='14' />
            <column datatype='integer' name='service fee' ordinal='15' />
            <column datatype='integer' name='minimum nights' ordinal='16' />
            <column datatype='integer' name='number of reviews' ordinal='17' />
            <column datatype='real' name='reviews per month' ordinal='18' />
            <column datatype='integer' name='review rate number' ordinal='19' />
            <column datatype='integer' name='calculated host listings count' ordinal='20' />
            <column datatype='integer' name='availability 365' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1gmvpsp15k69oz16j36zy0zbzry7' name='Airbnb_Open_Data.csv' table='[Airbnb_Open_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='NAME' ordinal='1' />
            <column datatype='integer' name='host id' ordinal='2' />
            <column datatype='string' name='host_identity_verified' ordinal='3' />
            <column datatype='string' name='host name' ordinal='4' />
            <column datatype='string' name='neighbourhood group' ordinal='5' />
            <column datatype='string' name='neighbourhood' ordinal='6' />
            <column datatype='real' name='lat' ordinal='7' />
            <column datatype='string' name='country' ordinal='8' />
            <column datatype='string' name='country code' ordinal='9' />
            <column datatype='boolean' name='instant_bookable' ordinal='10' />
            <column datatype='string' name='cancellation_policy' ordinal='11' />
            <column datatype='string' name='room type' ordinal='12' />
            <column datatype='integer' name='Construction year' ordinal='13' />
            <column datatype='real' name='price' ordinal='14' />
            <column datatype='integer' name='service fee' ordinal='15' />
            <column datatype='integer' name='minimum nights' ordinal='16' />
            <column datatype='integer' name='number of reviews' ordinal='17' />
            <column datatype='real' name='reviews per month' ordinal='18' />
            <column datatype='integer' name='review rate number' ordinal='19' />
            <column datatype='integer' name='calculated host listings count' ordinal='20' />
            <column datatype='integer' name='availability 365' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host id]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>host id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_identity_verified</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_identity_verified]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>host_identity_verified</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host name]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>host name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood group]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>neighbourhood group</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country code]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>country code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>instant_bookable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[instant_bookable]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>instant_bookable</remote-alias>
            <ordinal>10</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cancellation_policy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cancellation_policy]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>cancellation_policy</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room type]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>room type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Construction year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Construction year]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>Construction year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service fee</remote-name>
            <remote-type>20</remote-type>
            <local-name>[service fee]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>service fee</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum nights]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>minimum nights</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number of reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number of reviews]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>number of reviews</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews per month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviews per month]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>reviews per month</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review rate number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review rate number]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>review rate number</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated host listings count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated host listings count]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>calculated host listings count</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability 365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability 365]</local-name>
            <parent-name>[Airbnb_Open_Data.csv]</parent-name>
            <remote-alias>availability 365</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Reviews' datatype='integer' name='[Calculation_3645945396161220608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL([number of reviews]) THEN 0 ELSE [number of reviews] END' />
      </column>
      <column caption='Reviews per month' datatype='real' name='[Calculation_3645945396161589249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL([reviews per month]) THEN 0 ELSE [reviews per month] END' />
      </column>
      <column datatype='integer' name='[Construction year]' role='dimension' type='quantitative' />
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <column caption='Price (bin)' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[price]' peg='0' size='50' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Airbnb_Open_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]' role='measure' type='quantitative' />
      <column caption='Availability 365' datatype='integer' name='[availability 365]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated host listings count]' role='measure' type='quantitative' />
      <column caption='Cancellation Policy' datatype='string' name='[cancellation_policy]' role='dimension' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Host Id' datatype='integer' name='[host id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host name]' role='dimension' type='nominal' />
      <column caption='Host Identity Verified' datatype='string' name='[host_identity_verified]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Instant Bookable' datatype='boolean' name='[instant_bookable]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum nights]' role='measure' type='quantitative' />
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number of reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Review Rate Number' datatype='integer' name='[review rate number]' role='measure' type='quantitative' />
      <column caption='Reviews Per Month' datatype='real' name='[reviews per month]' role='measure' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
      <column caption='Service Fee' datatype='integer' name='[service fee]' role='measure' type='quantitative' />
      <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/mehta/AppData/Local/Temp/TableauTemp/#TableauTemp_14u8zr61qttyz814gl3dg0y1mref.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/20/2025 07:08:34 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>0</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74554</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NAME</remote-alias>
              <ordinal>1</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41854</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[host id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host id</remote-alias>
              <ordinal>2</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74554</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host_identity_verified</remote-name>
              <remote-type>129</remote-type>
              <local-name>[host_identity_verified]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host_identity_verified</remote-alias>
              <ordinal>3</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[host name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host name</remote-alias>
              <ordinal>4</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8309</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighbourhood group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighbourhood group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighbourhood group</remote-alias>
              <ordinal>5</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighbourhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighbourhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighbourhood</remote-alias>
              <ordinal>6</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>448</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>7</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20476</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>8</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country code</remote-alias>
              <ordinal>9</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>instant_bookable</remote-name>
              <remote-type>11</remote-type>
              <local-name>[instant_bookable]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>instant_bookable</remote-alias>
              <ordinal>10</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cancellation_policy</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cancellation_policy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cancellation_policy</remote-alias>
              <ordinal>11</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[room type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room type</remote-alias>
              <ordinal>12</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Construction year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Construction year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Construction year</remote-alias>
              <ordinal>13</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>14</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3774</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>service fee</remote-name>
              <remote-type>20</remote-type>
              <local-name>[service fee]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>service fee</remote-alias>
              <ordinal>15</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>262</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>minimum nights</remote-name>
              <remote-type>20</remote-type>
              <local-name>[minimum nights]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>minimum nights</remote-alias>
              <ordinal>16</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number of reviews</remote-name>
              <remote-type>20</remote-type>
              <local-name>[number of reviews]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number of reviews</remote-alias>
              <ordinal>17</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>535</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reviews per month</remote-name>
              <remote-type>5</remote-type>
              <local-name>[reviews per month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reviews per month</remote-alias>
              <ordinal>18</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1678</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review rate number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[review rate number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review rate number</remote-alias>
              <ordinal>19</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>calculated host listings count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[calculated host listings count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>calculated host listings count</remote-alias>
              <ordinal>20</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>163</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>availability 365</remote-name>
              <remote-type>20</remote-type>
              <local-name>[availability 365]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>availability 365</remote-alias>
              <ordinal>21</ordinal>
              <family>Airbnb_Open_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1239</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:room type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hotel room&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Airbnb_Open_Data.csv' id='Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1'>
            <properties context=''>
              <relation connection='textscan.1gmvpsp15k69oz16j36zy0zbzry7' name='Airbnb_Open_Data.csv' table='[Airbnb_Open_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='integer' name='host id' ordinal='2' />
                  <column datatype='string' name='host_identity_verified' ordinal='3' />
                  <column datatype='string' name='host name' ordinal='4' />
                  <column datatype='string' name='neighbourhood group' ordinal='5' />
                  <column datatype='string' name='neighbourhood' ordinal='6' />
                  <column datatype='real' name='lat' ordinal='7' />
                  <column datatype='string' name='country' ordinal='8' />
                  <column datatype='string' name='country code' ordinal='9' />
                  <column datatype='boolean' name='instant_bookable' ordinal='10' />
                  <column datatype='string' name='cancellation_policy' ordinal='11' />
                  <column datatype='string' name='room type' ordinal='12' />
                  <column datatype='integer' name='Construction year' ordinal='13' />
                  <column datatype='real' name='price' ordinal='14' />
                  <column datatype='integer' name='service fee' ordinal='15' />
                  <column datatype='integer' name='minimum nights' ordinal='16' />
                  <column datatype='integer' name='number of reviews' ordinal='17' />
                  <column datatype='real' name='reviews per month' ordinal='18' />
                  <column datatype='integer' name='review rate number' ordinal='19' />
                  <column datatype='integer' name='calculated host listings count' ordinal='20' />
                  <column datatype='integer' name='availability 365' ordinal='21' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='KPI_Average_Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>KPI_Average_Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ocejai1p5l5df1032c7a1sjxrm6'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[avg:price:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'>&lt;</run>
                <run bold='true' fontsize='18'>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[avg:price:qk]</run>
                <run bold='true' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DC1D83C3-DC7F-4419-AD17-D01F79A0B4A1}' />
    </worksheet>
    <worksheet name='KPI_Average_Reviews'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>KPI_Avg_Reviews</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ocejai1p5l5df1032c7a1sjxrm6'>
            <column-instance column='[number of reviews]' derivation='Avg' name='[avg:number of reviews:qk]' pivot='key' type='quantitative' />
            <column caption='Number Of Reviews' datatype='integer' name='[number of reviews]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[avg:number of reviews:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'>&lt;</run>
                <run bold='true' fontsize='18'>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[avg:number of reviews:qk]</run>
                <run bold='true' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CEBA40DC-8D67-4827-957A-81A5A48551BE}' />
    </worksheet>
    <worksheet name='KPI_Total_Hosts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>KPI_Total_Hosts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ocejai1p5l5df1032c7a1sjxrm6'>
            <column-instance column='[host id]' derivation='CountD' name='[ctd:host id:qk]' pivot='key' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[ctd:host id:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'>&lt;</run>
                <run bold='true' fontsize='18'>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[ctd:host id:qk]</run>
                <run bold='true' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A0867D69-A43B-403A-87C5-96B73565FACB}' />
    </worksheet>
    <worksheet name='KPI_Total_Listing'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>KPI_Total_Listings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ocejai1p5l5df1032c7a1sjxrm6'>
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[ctd:id:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'>&lt;</run>
                <run bold='true' fontsize='18'>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[ctd:id:qk]</run>
                <run bold='true' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7075DCE3-69F6-49D1-8913-012859D38F87}' />
    </worksheet>
    <worksheet name='Listing by Neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ocejai1p5l5df1032c7a1sjxrm6'>
            <column caption='Price (bin)' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[price]' peg='0' size='50' />
            </column>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='2' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='6' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='7' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='8' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='9' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='10' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='11' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='12' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='13' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='14' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='15' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='16' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='17' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='18' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='19' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='20' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='21' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]'>
            <groupfilter function='level-members' level='[none:id:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([id])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Allerton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Arden Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Arrochar&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Arverne&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Astoria&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bath Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Battery Park City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bay Ridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bay Terrace&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bay Terrace, Staten Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Baychester&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bayside&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bayswater&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bedford-Stuyvesant&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Belle Harbor&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bellerose&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Belmont&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bensonhurst&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bergen Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Boerum Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Borough Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Breezy Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Briarwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Brighton Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bronxdale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Brooklyn Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Brownsville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bull&apos;s Head&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bushwick&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Cambria Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Canarsie&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Carroll Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Castle Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Castleton Corners&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chelsea&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chelsea, Staten Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chinatown&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;City Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Civic Center&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Claremont Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Clason Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Clifton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Clinton Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Co-op City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Cobble Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;College Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Columbia St&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Concord&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Concourse&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Concourse Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Coney Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Corona&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Crown Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Cypress Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Ditmars Steinway&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Dongan Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Douglaston&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Downtown Brooklyn&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;DUMBO&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Dyker Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Elmhurst&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Flatbush&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Harlem&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Morrisania&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East New York&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Eastchester&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Edenwald&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Edgemere&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Elmhurst&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Eltingville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Emerson Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Far Rockaway&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fieldston&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Financial District&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flatbush&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flatiron District&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flatlands&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flushing&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fordham&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Forest Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fort Greene&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fort Hamilton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fresh Meadows&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gerritsen Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Glen Oaks&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Glendale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gowanus&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gramercy&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Graniteville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Grant City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gravesend&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Great Kills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Greenpoint&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Greenwich Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Grymes Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Harlem&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Hell&apos;s Kitchen&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Highbridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Hollis&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Holliswood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Howard Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Howland Hook&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Huguenot&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Hunts Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Inwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jackson Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jamaica Estates&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jamaica Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kensington&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kew Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kew Gardens Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kingsbridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kips Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Laurelton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Lighthouse Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Little Italy&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Little Neck&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Long Island City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Longwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Lower East Side&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Manhattan Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Marble Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mariners Harbor&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Maspeth&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Melrose&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Middle Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Midland Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Midtown&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Midwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mill Basin&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morningside Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morris Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morris Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morrisania&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mott Haven&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mount Eden&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mount Hope&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Murray Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Navy Yard&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Neponsit&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Brighton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Dorp&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Dorp Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Springville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;NoHo&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Nolita&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;North Riverdale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Norwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Oakwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Olinville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Ozone Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Park Slope&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Parkchester&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Pelham Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Pelham Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Port Morris&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Port Richmond&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Prince&apos;s Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Prospect Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Prospect-Lefferts Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Queens Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Randall Manor&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Red Hook&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rego Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Richmond Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Richmondtown&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Ridgewood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Riverdale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rockaway Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Roosevelt Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rosebank&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rosedale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rossville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Schuylerville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sea Gate&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sheepshead Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Shore Acres&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Silver Lake&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;SoHo&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Soundview&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;South Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;South Ozone Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;South Slope&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Springfield Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Spuyten Duyvil&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;St. Albans&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;St. George&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Stapleton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Stuyvesant Town&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sunnyside&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sunset Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Theater District&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Throgs Neck&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Todt Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tompkinsville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tottenville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tremont&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tribeca&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Two Bridges&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Unionport&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;University Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Upper East Side&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Upper West Side&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Van Nest&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Vinegar Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Wakefield&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Washington Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;West Brighton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;West Farms&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;West Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Westchester Square&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Westerleigh&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Whitestone&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Williamsbridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Williamsburg&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Willowbrook&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Windsor Terrace&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodhaven&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodlawn&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodrow&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodside&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:room type:nk]' member='&quot;Entire home/apt&quot;' />
              <groupfilter function='member' level='[none:room type:nk]' member='&quot;Hotel room&quot;' />
              <groupfilter function='member' level='[none:room type:nk]' member='&quot;Private room&quot;' />
              <groupfilter function='member' level='[none:room type:nk]' member='&quot;Shared room&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[cnt:id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]</column>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]</column>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</column>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</rows>
        <cols>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{DCF1E7AE-6775-4367-9588-FEDBE7F371AC}' />
    </worksheet>
    <worksheet name='Price vs Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ocejai1p5l5df1032c7a1sjxrm6'>
            <column caption='Price (bin)' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[price]' peg='0' size='50' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='Airbnb_Open_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1]' role='measure' type='quantitative' />
            <column caption='Availability 365' datatype='integer' name='[availability 365]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number of reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
            <column-instance column='[availability 365]' derivation='Sum' name='[sum:availability 365:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number of reviews]' derivation='Sum' name='[sum:number of reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='2' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='6' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='7' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='8' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='9' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='10' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='11' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='12' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='13' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='14' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='15' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='16' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='17' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='18' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='19' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='20' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='21' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Airbnb_Open_Data.csv_455203F4FFCB4A6AB6496980C1FDB0B1])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Allerton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Arden Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Arrochar&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Arverne&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Astoria&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bath Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Battery Park City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bay Ridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bay Terrace&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bay Terrace, Staten Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Baychester&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bayside&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bayswater&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bedford-Stuyvesant&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Belle Harbor&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bellerose&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Belmont&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bensonhurst&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bergen Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Boerum Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Borough Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Breezy Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Briarwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Brighton Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bronxdale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Brooklyn Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Brownsville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bull&apos;s Head&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bushwick&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Cambria Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Canarsie&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Carroll Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Castle Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Castleton Corners&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chelsea&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chelsea, Staten Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chinatown&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;City Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Civic Center&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Claremont Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Clason Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Clifton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Clinton Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Co-op City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Cobble Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;College Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Columbia St&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Concord&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Concourse&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Concourse Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Coney Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Corona&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Crown Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Cypress Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Ditmars Steinway&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Dongan Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Douglaston&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Downtown Brooklyn&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;DUMBO&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Dyker Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Elmhurst&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Flatbush&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Harlem&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Morrisania&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East New York&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Eastchester&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Edenwald&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Edgemere&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Elmhurst&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Eltingville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Emerson Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Far Rockaway&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fieldston&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Financial District&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flatbush&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flatiron District&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flatlands&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flushing&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fordham&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Forest Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fort Greene&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fort Hamilton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fresh Meadows&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gerritsen Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Glen Oaks&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Glendale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gowanus&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gramercy&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Graniteville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Grant City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gravesend&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Great Kills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Greenpoint&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Greenwich Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Grymes Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Harlem&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Hell&apos;s Kitchen&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Highbridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Hollis&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Holliswood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Howard Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Howland Hook&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Huguenot&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Hunts Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Inwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jackson Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jamaica Estates&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jamaica Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kensington&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kew Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kew Gardens Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kingsbridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kips Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Laurelton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Lighthouse Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Little Italy&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Little Neck&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Long Island City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Longwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Lower East Side&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Manhattan Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Marble Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mariners Harbor&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Maspeth&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Melrose&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Middle Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Midland Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Midtown&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Midwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mill Basin&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morningside Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morris Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morris Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morrisania&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mott Haven&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mount Eden&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mount Hope&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Murray Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Navy Yard&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Neponsit&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Brighton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Dorp&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Dorp Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Springville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;NoHo&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Nolita&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;North Riverdale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Norwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Oakwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Olinville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Ozone Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Park Slope&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Parkchester&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Pelham Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Pelham Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Port Morris&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Port Richmond&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Prince&apos;s Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Prospect Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Prospect-Lefferts Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Queens Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Randall Manor&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Red Hook&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rego Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Richmond Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Richmondtown&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Ridgewood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Riverdale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rockaway Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Roosevelt Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rosebank&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rosedale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rossville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Schuylerville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sea Gate&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sheepshead Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Shore Acres&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Silver Lake&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;SoHo&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Soundview&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;South Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;South Ozone Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;South Slope&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Springfield Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Spuyten Duyvil&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;St. Albans&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;St. George&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Stapleton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Stuyvesant Town&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sunnyside&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sunset Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Theater District&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Throgs Neck&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Todt Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tompkinsville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tottenville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tremont&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tribeca&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Two Bridges&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Unionport&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;University Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Upper East Side&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Upper West Side&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Van Nest&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Vinegar Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Wakefield&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Washington Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;West Brighton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;West Farms&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;West Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Westchester Square&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Westerleigh&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Whitestone&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Williamsbridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Williamsburg&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Willowbrook&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Windsor Terrace&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodhaven&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodlawn&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodrow&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodside&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:price:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:price:qk]</column>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</column>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' />
              <size column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:availability 365:qk]' />
              <lod column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:number of reviews:qk]</rows>
        <cols>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:price:qk]</cols>
      </table>
      <simple-id uuid='{9D3958C2-382A-4617-80D6-60D69AF6C4A7}' />
    </worksheet>
    <worksheet name='Reviews per Month by Room Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ocejai1p5l5df1032c7a1sjxrm6'>
            <column caption='Price (bin)' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[price]' peg='0' size='50' />
            </column>
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Reviews Per Month' datatype='real' name='[reviews per month]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
            <column-instance column='[reviews per month]' derivation='Sum' name='[sum:reviews per month:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='2' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='6' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='7' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='8' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='9' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='10' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='11' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='12' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='13' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='14' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='15' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='16' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='17' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='18' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='19' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='20' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='21' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([reviews per month])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:neighbourhood:nk]' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:room type:nk]' member='&quot;Entire home/apt&quot;' />
              <groupfilter function='member' level='[none:room type:nk]' member='&quot;Hotel room&quot;' />
              <groupfilter function='member' level='[none:room type:nk]' member='&quot;Private room&quot;' />
              <groupfilter function='member' level='[none:room type:nk]' member='&quot;Shared room&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</column>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]</column>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:reviews per month:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</rows>
        <cols>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]</cols>
      </table>
      <simple-id uuid='{F85E119C-204B-443C-901B-986341AD1ACA}' />
    </worksheet>
    <worksheet name='Room Type by Neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airbnb_Open_Data' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ocejai1p5l5df1032c7a1sjxrm6'>
            <column caption='Price (bin)' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[price]' peg='0' size='50' />
            </column>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='2' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='5' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='6' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='7' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='8' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='9' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='10' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='11' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='12' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='13' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='14' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='15' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='16' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='17' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='18' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='19' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='20' />
              <groupfilter function='member' level='[none:Price (bin):ok]' member='21' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]'>
            <groupfilter function='level-members' level='[none:id:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([id])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Allerton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Arden Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Arrochar&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Arverne&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Astoria&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bath Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Battery Park City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bay Ridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bay Terrace&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bay Terrace, Staten Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Baychester&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bayside&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bayswater&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bedford-Stuyvesant&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Belle Harbor&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bellerose&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Belmont&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bensonhurst&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bergen Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Boerum Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Borough Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Breezy Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Briarwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Brighton Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bronxdale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Brooklyn Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Brownsville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bull&apos;s Head&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Bushwick&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Cambria Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Canarsie&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Carroll Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Castle Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Castleton Corners&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chelsea&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chelsea, Staten Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chinatown&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;City Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Civic Center&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Claremont Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Clason Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Clifton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Clinton Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Co-op City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Cobble Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;College Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Columbia St&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Concord&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Concourse&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Concourse Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Coney Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Corona&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Crown Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Cypress Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Ditmars Steinway&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Dongan Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Douglaston&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Downtown Brooklyn&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;DUMBO&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Dyker Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Elmhurst&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Flatbush&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Harlem&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Morrisania&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East New York&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;East Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Eastchester&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Edenwald&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Edgemere&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Elmhurst&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Eltingville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Emerson Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Far Rockaway&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fieldston&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Financial District&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flatbush&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flatiron District&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flatlands&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Flushing&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fordham&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Forest Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fort Greene&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fort Hamilton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Fresh Meadows&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gerritsen Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Glen Oaks&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Glendale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gowanus&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gramercy&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Graniteville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Grant City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Gravesend&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Great Kills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Greenpoint&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Greenwich Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Grymes Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Harlem&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Hell&apos;s Kitchen&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Highbridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Hollis&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Holliswood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Howard Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Howland Hook&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Huguenot&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Hunts Point&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Inwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jackson Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jamaica Estates&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Jamaica Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kensington&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kew Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kew Gardens Hills&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kingsbridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Kips Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Laurelton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Lighthouse Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Little Italy&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Little Neck&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Long Island City&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Longwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Lower East Side&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Manhattan Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Marble Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mariners Harbor&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Maspeth&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Melrose&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Middle Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Midland Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Midtown&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Midwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mill Basin&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morningside Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morris Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morris Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Morrisania&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mott Haven&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mount Eden&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Mount Hope&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Murray Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Navy Yard&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Neponsit&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Brighton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Dorp&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Dorp Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;New Springville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;NoHo&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Nolita&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;North Riverdale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Norwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Oakwood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Olinville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Ozone Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Park Slope&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Parkchester&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Pelham Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Pelham Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Port Morris&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Port Richmond&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Prince&apos;s Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Prospect Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Prospect-Lefferts Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Queens Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Randall Manor&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Red Hook&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rego Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Richmond Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Richmondtown&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Ridgewood&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Riverdale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rockaway Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Roosevelt Island&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rosebank&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rosedale&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Rossville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Schuylerville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sea Gate&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sheepshead Bay&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Shore Acres&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Silver Lake&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;SoHo&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Soundview&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;South Beach&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;South Ozone Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;South Slope&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Springfield Gardens&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Spuyten Duyvil&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;St. Albans&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;St. George&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Stapleton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Stuyvesant Town&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sunnyside&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Sunset Park&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Theater District&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Throgs Neck&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Todt Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tompkinsville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tottenville&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tremont&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Tribeca&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Two Bridges&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Unionport&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;University Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Upper East Side&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Upper West Side&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Van Nest&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Vinegar Hill&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Wakefield&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Washington Heights&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;West Brighton&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;West Farms&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;West Village&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Westchester Square&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Westerleigh&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Whitestone&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Williamsbridge&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Williamsburg&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Willowbrook&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Windsor Terrace&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodhaven&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodlawn&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodrow&quot;' />
                  <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Woodside&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[cnt:id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]</column>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</column>
            <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</rows>
        <cols>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{38F1B1EC-DFAA-4B73-BD1C-AB47AA4B8C38}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
        <show-full-range>
          <column>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[Price (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{10B43C90-268A-46D3-B04A-9CF8D753A883}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Airbnb Dashboard'>
      <style />
      <size maxheight='1060' maxwidth='1620' minheight='1060' minwidth='1620' sizing-mode='range' />
      <datasources>
        <datasource caption='Airbnb_Open_Data' name='federated.1ocejai1p5l5df1032c7a1sjxrm6' />
      </datasources>
      <datasource-dependencies datasource='federated.1ocejai1p5l5df1032c7a1sjxrm6'>
        <column caption='Price (bin)' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='1' formula='[price]' peg='0' size='50' />
        </column>
        <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
        <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
        <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
        <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
        <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
        <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98490' id='7' param='horz' type-v2='layout-flow' w='99012' x='494' y='755'>
            <zone h='98490' id='5' type-v2='layout-basic' w='89135' x='494' y='755'>
              <zone h='24625' id='3' name='Listing by Neighborhood' w='44562' x='494' y='25375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49245' id='10' name='Room Type by Neighborhood' w='44568' x='45061' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24625' id='13' name='Reviews per Month by Room Type' w='44573' x='45056' y='25375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49245' id='18' name='Price vs Reviews' w='44567' x='494' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24620' id='24' name='KPI_Total_Hosts' w='22281' x='494' y='755'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24620' id='25' name='KPI_Average_Price' w='22287' x='45056' y='755'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24620' id='26' name='KPI_Total_Listing' w='22281' x='22775' y='755'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24620' id='27' name='KPI_Average_Reviews' w='22286' x='67343' y='755'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98490' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9877' x='89629' y='755'>
              <zone h='9084' id='8' name='Listing by Neighborhood' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type-v2='filter' w='9877' x='89629' y='755'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9084' id='9' name='Listing by Neighborhood' pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' type-v2='color' w='9877' x='89629' y='9839'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9084' id='11' name='Room Type by Neighborhood' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]' type-v2='filter' w='9877' x='89629' y='18923'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9084' id='12' name='Room Type by Neighborhood' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type-v2='filter' w='9877' x='89629' y='28007'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9084' id='14' name='Reviews per Month by Room Type' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]' type-v2='filter' w='9877' x='89629' y='37091'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9084' id='15' name='Reviews per Month by Room Type' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' type-v2='filter' w='9877' x='89629' y='46175'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9084' id='16' name='Reviews per Month by Room Type' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type-v2='filter' w='9877' x='89629' y='55259'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7642' id='17' name='Reviews per Month by Room Type' pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:reviews per month:qk]' type-v2='color' w='9877' x='89629' y='64343'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9084' id='19' name='Price vs Reviews' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]' type-v2='filter' w='9877' x='89629' y='71985'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9084' id='20' name='Price vs Reviews' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type-v2='filter' w='9877' x='89629' y='81069'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9092' id='21' name='Price vs Reviews' pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:availability 365:qk]' type-v2='size' w='9877' x='89629' y='90153'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2850' minheight='2850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98490' id='30' param='vert' type-v2='layout-flow' w='99012' x='494' y='755'>
                <zone fixed-size='253' h='24620' id='24' is-fixed='true' name='KPI_Total_Hosts' w='22281' x='494' y='755'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='24620' id='26' is-fixed='true' name='KPI_Total_Listing' w='22281' x='22775' y='755'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='24620' id='25' is-fixed='true' name='KPI_Average_Price' w='22287' x='45056' y='755'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='24620' id='27' is-fixed='true' name='KPI_Average_Reviews' w='22286' x='67343' y='755'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9084' id='8' mode='checkdropdown' name='Listing by Neighborhood' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type-v2='filter' w='9877' x='89629' y='755'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='24625' id='3' is-fixed='true' name='Listing by Neighborhood' w='44562' x='494' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9084' id='9' name='Listing by Neighborhood' pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' type-v2='color' w='9877' x='89629' y='9839'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9084' id='14' mode='checkdropdown' name='Reviews per Month by Room Type' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]' type-v2='filter' w='9877' x='89629' y='37091'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9084' id='15' mode='checkdropdown' name='Reviews per Month by Room Type' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' type-v2='filter' w='9877' x='89629' y='46175'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9084' id='16' mode='checkdropdown' name='Reviews per Month by Room Type' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type-v2='filter' w='9877' x='89629' y='55259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='24625' id='13' is-fixed='true' name='Reviews per Month by Room Type' w='44573' x='45056' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7642' id='17' name='Reviews per Month by Room Type' pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:reviews per month:qk]' type-v2='color' w='9877' x='89629' y='64343'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9084' id='19' mode='checkdropdown' name='Price vs Reviews' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]' type-v2='filter' w='9877' x='89629' y='71985'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9084' id='20' mode='checkdropdown' name='Price vs Reviews' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type-v2='filter' w='9877' x='89629' y='81069'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49245' id='18' is-fixed='true' name='Price vs Reviews' w='44567' x='494' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9092' id='21' name='Price vs Reviews' pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:availability 365:qk]' type-v2='size' w='9877' x='89629' y='90153'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9084' id='11' mode='checkdropdown' name='Room Type by Neighborhood' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]' type-v2='filter' w='9877' x='89629' y='18923'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9084' id='12' mode='checkdropdown' name='Room Type by Neighborhood' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type-v2='filter' w='9877' x='89629' y='28007'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49245' id='10' is-fixed='true' name='Room Type by Neighborhood' w='44568' x='45061' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AB202EEB-5F89-4E4F-A263-2897298226B7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Listing by Neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42C27274-B128-48D8-9887-CF04FD51EEFD}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{73E68D73-66B8-48DA-91E4-4255A1A1A272}' />
    </window>
    <window class='dashboard' maximized='true' name='Airbnb Dashboard'>
      <viewpoints>
        <viewpoint name='KPI_Average_Price' />
        <viewpoint name='KPI_Average_Reviews' />
        <viewpoint name='KPI_Total_Hosts' />
        <viewpoint name='KPI_Total_Listing' />
        <viewpoint name='Listing by Neighborhood'>
          <highlight>
            <color-one-way>
              <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Price vs Reviews'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:availability 365:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Reviews per Month by Room Type' />
        <viewpoint name='Room Type by Neighborhood' />
      </viewpoints>
      <active id='27' />
      <simple-id uuid='{1A13D040-9FD1-47FD-9264-15EB2EB86FC5}' />
    </window>
    <window class='worksheet' name='KPI_Total_Listing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{826B62AE-209B-4278-83A1-A84D386A0878}' />
    </window>
    <window class='worksheet' name='KPI_Total_Hosts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:host id:ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB4BA693-785E-48E3-BC1A-EB09C7727317}' />
    </window>
    <window class='worksheet' name='KPI_Average_Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:host id:ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396255F6-49E7-4D17-B1D5-06F57A967522}' />
    </window>
    <window class='worksheet' name='KPI_Average_Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:host id:ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8D437B9-ACD1-4053-9AC0-BF7F9AD25CCF}' />
    </window>
    <window class='worksheet' name='Room Type by Neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]' type='filter' />
            <card param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E109AB44-CAA0-482E-92C3-A119E0023B52}' />
    </window>
    <window class='worksheet' name='Price vs Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]' type='filter' />
            <card param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:availability 365:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:id:ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:number of reviews:qk]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:price:qk]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E7BF8C3-6089-4E4D-A7FC-321D9DE287E4}' />
    </window>
    <window class='worksheet' name='Reviews per Month by Room Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]' type='filter' />
            <card param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]' type='filter' />
            <card param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ocejai1p5l5df1032c7a1sjxrm6].[sum:reviews per month:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:Price (bin):ok]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:neighbourhood:nk]</field>
            <field>[federated.1ocejai1p5l5df1032c7a1sjxrm6].[none:room type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B5C47621-9A38-4CAC-A5DE-195ABC8A5C1B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airbnb Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='54' name='KPI_Average_Price' width='124'>
      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
      kSEJLjL+D/8t15WxgDASAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='54' name='KPI_Average_Reviews' width='124'>
      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
    </thumbnail>
    <thumbnail height='54' name='KPI_Total_Hosts' width='144'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='54' name='KPI_Total_Listing' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAAA2CAYAAAAoAxBLAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAMJ0lEQVR4nO2be1BU1x3HP+mwTlYjU10VUGOUiC+sj4pOtQYMGowiwYC4AYwo0WC1NGIE
      qw7SaI2RxEfcFKWoARt8EGVEA8YHKOAjJZpE6itIQBSjGMDMItiBO2P/UHbvwt0HXBCS3s8M
      f5zl7Dm/Pfd7z+93fr97n3n06NEjFBSayW/a2gCFXzaKgBRkoQhIQRaKgBRkoQhIQRaKgBRk
      oQhIQRaKgBRkoQhIQRaKgBRkoQhIQRaKgBRkoQhIQRaKgBRkoQhIQRaKgBRkoQhIQRaKgBRk
      oQhIQRaKgBRkYff0psohxm0J6TJHGRh+gOSQFyz0qOXW+YOk7/2SjKvF/FRWRR2AqjMO3fsx
      eOrrzPGbzNAeHWRaYm76e1zKOcKh1CN8VVJmnB81XXv2ov8fphAYGMDYfh1tWPwidmpnEvdD
      U40YSPiBZMwvUy36wnyyz+SSnX2SgtL7/Fj50PBfddeedOk9gKmvvsHkaSPo19G8pc88vbcy
      Wl9A+vwkVq3Yxum7dVZGUeE4fgHvrw5hmL1Mg54g1BRz8uNVvH/oKlXWpkeF4/jFbIzVMsCi
      jpu7ZmYEJNzh3I4NbNh7hhvWjXyCGhf/99gY6YmThI5+YS5MRS/HbhKfC9zJiCIgVGeDeADq
      uHtaR2hADDl6uTbVcuvwCqZPDGD5AVvEUz//h4TMT6JIsNCtpJhCueaJuX2MTxJONUE8AA+5
      fiAKv7ekbX2KO1AzqM4hxmcJ6fUXWaMlPj2SUQ3uBKFoJyEz4/je8IkaF/9w3g14hSF9u9DR
      DoSa+9y4kMIn6xNNRKZyjWBvUjCWnKJFSpII9teJ5gZ17zH4BYXi4zmAPt3s6QAINXe4lrmX
      LfEpfCOav8/cXaQsGiLtznJicFtSv/+8yMKUfYQ6N9dQU1tVnfsy8hUfpnj9kbEv9uS3Xepd
      ai360gLy0rezOfE04vtRo40nPXKUia3tegcq+2KXUTzAiNDZjcQD1WRuSxBdwIG8uTOdPctn
      4tb/sXgA7Dp2of9LYWw+mE6st8bQu+7yJ/zjaHWL2KtyHE/4tgwyD8YRMdON/k/E83h+J4b6
      RPDP3esRTc/NzxLJNDP97Vs3RK3+9O0j38ZnXaYSuS2D7JP7iVsRgo9bf7p1EcdjHbDvPZRJ
      YZs5mBqDh8jFV6Qe4myDXaj9Cki4wK6d3xnb9t7MnuYg0fECZ7OMt4n9jHdYZCmwseuK57vv
      4KGq/6CO3LyLMo1V4+IfS+rBzYS49cBiWGPvTtQ7HsZ23Xnyr0l3LSkqMDaceuIo98jTK5j4
      PavRWrPxCXZOPkSFjTB+UFdI8W3TPu1WQNWZ+0itMLb7aINx7yTRsUGc8NK4MdZPN/auDBO5
      grqqKv7bXEPteuG3JY1/LZcOMqXo5DqMgYaWngeSO1AFd34U+Y/ejkjdPk3Czq7Jx24Hp16W
      h2y+Na1JCft3ZWFYPpUH8wIHSHft1h1HMLgwQRBo8s9Sq3m2WXYCvSbhb3mNG1N+jztWO92g
      SBRYqXo6oTHfudUouPofUcuR7g3OMO1yBxLy9pAkWjx7Xy1e5rxSp1GMEe2y57LPYjWiKfuK
      XNH4o4e5NtPS5iCQd/wIxtBuIM5SEXx1GXdF8d8AyU6ti1CUxNrEm4a2RhuEVwMv0A4FVEba
      p2miBR5B2FxLbsmBaaG+hrtTn76W2KxKzJ6OawvYGbUZQ3Sl0TLP9+nd2/qcNUTvFymjjztj
      pbRRUowoAqLv803d5uRQy63jawgM1nG53g1ovFkZNqrRdWh/LqzgIMlfi47ZngFIxs4iOo1b
      ztbwQoJ1l6mjgvQoby6Mn8OyP89klOEYL3GMVg8nYmuExMmuNRCozFrH7JXpGEM7Db5LZyHl
      nIW7P5q4ufQlbg0Siio6O3TH4YVhTJgwnUmvDqO/fXOz67Xoy/Xcu3GOM8eOcPj4tya5IrVL
      MBviIxgj4QXaWR6omqNRk1hpOFX1Yf7uVMLMhD+mCNzJWsdfVqZRbEOeTO3iz3sbI/G0NfKV
      g1DJWd0iliVfx1gwUNFP+zE7Iscg5Z2LdmqZ2aQahpreE+YRsyKYkV1t+E0mOSZpVJ0H89qS
      lYRNGYS5IdvRDiSQ94GPSDz2zIhLsVE8gKDn7q0K0QWy0r2qjFs/1YBTC9UyGqEnP2kVK7aZ
      JuNQOeIVncDqqU4WF985dB/nQ83/v1Zfzr2b35GZkkTi8atU1T2k9JSO+ad0ZhOuTaWuqpBj
      Kbtx7r0Y/5FdJe1tPzuQPoN3J68iu36xB4ZzIDnEtgyxUERyWAibLtbLR43L1HksnP2ayIXd
      58aFQ+yK207G9fp+GsYu38omf+cWvZOEyrPoFi0j+bqpnFX9fFm7ZXmL73pCZRZrAqNIF6U9
      RkSms11r68FfoOb+z9RU3ODcmVyyTxzizNUqRIEEjl7RJKye2ihV0W4EVBDvR1BCfcSvwnPt
      CWInSyV+GqInJyaAJfWrp3JlbrzOfDJRqCRrTSBRhtXW4LsllehxtsxlgzX58UQsSuCiiXbU
      DJ+/hQ/fGmnWFcilUTln9HKObvVv9tG/9lYun8b+nYRzoojNeyOfv+du4nLbxymsOofkfcbj
      In1mMWeijRf04g7Wim69EYtjrWeio7ey0JDJqyDto89MTjzNRZ+zhqAwU/GoHMcTuTuTHWGt
      Jx4AO2ctwaIEN1/nc1nGeB2ef4kw3edsFNVdKtL/Rlye6fm2XQioUc1LO4MhNi72ldNZolON
      B37WjmwAds74+o02tm9mcbrIRmPNIBQlEb4sTRTvqHD0Wk3qwc1oLT+z0UJ0oq+zUwuPaY97
      1BI8DWUfPWlH80x6tL2AhCvs3yeuec3gbX/bk/bl98SH3ed4zsaNS9O9h6j1AyWlNk/ZmOqz
      rPuTKGeCCteFSaS+3zhmaE0e1rRMUdiEToNwFZd9CosRl8PaXEDVmYl8JvZeWj/GNHvRH5ip
      K0nM++CBqKXCrtlzClxJ/Ig0UQCr8V6PLnSATQXLlqOCG0WibdypB1JPTrU0bSyghjUvT8Jm
      2Xpuf4zrMJEr4iyZ2bY8IVbGF6nZovYIhgw029ky1ZkkmtwBc9kU7S6Z27GZkjQ2JX1LpaWH
      zRogXNlL8tfGtur3vzNNUFZXUlnbDFsalH3shw5CnBNvUwE1rHlp/LTYGjsbvjN+EqNFj2Zk
      rwlnZ4GllaqlYGcUm0VeU+U5nVebeVypPp1JrijP05T4zTw/c143H+/pi4nPvYW16y5UZrEm
      4lOMMu7DLO0409RE+WHCJ05naXwuxTU2KrNh2Qd7vDyGm3RpQwE1rnmFzm5ca7GKgy+RC1wx
      augycSF+vL3pMJdK9cbFr9VTeukw6wInEhR3WbTrubJgwUSkdSuQ94Enbm5uT/6CSSox7XEt
      /7woX/Ii40bLfujCQN3d0yREvI7Hy2+yKukEl0rL0Rt/EPryQnLjFzPd2zQHpPFezJtSKn5Y
      yqmECALcX8YrdCnbUs5wqbSc+2JBCTXcL73EiaRVBE4MIu6yKBs0ehFzG8QXbZeJblDzsvee
      bbXmJY0dziE61t8MYlna3ccXs+4u3yS/x5xkK19VOeK7XkeIs5llqM5kf5rYJdo1iJUaxB38
      QNxMN+Ka+AsavSjwnIbuavj+STqgruoqGbq/kqGzPpZ6eARbrbrQh1Tmn2J7/im222ijqp+W
      j9f7N3omqY12oGqObk802XK1we5mdgFbsMc9OpWUdf64qG37htrFn3UpqUS7m1/qsi8+J0v8
      TLD3W/iYFMUf8ED2Q/kSaKax+eQxEiKnMrizynp/AFVnBgdvIS0+GMn7oZcP0THBjOlt4wKJ
      x/WPJXVPZDsqppbtY573hwbfqvJYzdENU+UFnvWI38sqvC1638n4Xpafnw8TBknXdowUEO8X
      hCE5LllfKiEp2B/d9xJfbwKW33Wr5d6lHI4c/5Lsk1cp/qnM8OaHqrMD3fsN5mUPX6YHjLX4
      /pYRgZo71/g29zSn8vL4d0EZVaIxTar8U97Ad+IgnNrHe2G/MAri8QtKeLxLqlwJT95h3tX9
      H9PmeaD2iUBe6r4nLlaF64IYghXxSKIISApR8KwavZTYkJat1v+aUAQkgSF4tp/MWomTh4IR
      RUCNKOPU8e8ADd5/W4Znaz1v9itBCaIVZKHsQAqyUASkIIv/ARO/arQbfMOdAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Listing by Neighborhood' width='192'>
      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
      EQDB1P4FGNI7pm9vgsgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price vs Reviews' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Reviews per Month by Room Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Room Type by Neighborhood' width='192'>
      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
      EQDB1P4FGNI7pm9vgsgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
